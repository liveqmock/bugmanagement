package com.sicd.bugmanagement.common.bean;

// Generated 2013-10-17 10:13:18 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Question generated by hbm2java
 */
@Entity
@Table(name = "question", catalog = "bugmanagement")
public class Question implements java.io.Serializable {

	private static final long serialVersionUID = 3769297989852455137L;
	
	private Integer questionId;
	private Developer developer;
	private MyException myException;
	private String title;
	private String content;
	private Date createdAt;
	private Boolean isOpen;
	private Integer votes;
	private Integer sofId;
	private Set<Answer> answers = new HashSet<Answer>(0);

	public Question() {
	}

	public Question(Developer developer, MyException myException, String title,
			String content, Date createdAt, Boolean isOpen, Integer votes,
			Set<Answer> answers) {
		this.developer = developer;
		this.myException = myException;
		this.title = title;
		this.content = content;
		this.createdAt = createdAt;
		this.isOpen = isOpen;
		this.votes = votes;
		this.answers = answers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "question_id", unique = true, nullable = false)
	public Integer getQuestionId() {
		return this.questionId;
	}

	public void setQuestionId(Integer questionId) {
		this.questionId = questionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "developer_id")
	public Developer getDeveloper() {
		return this.developer;
	}

	public void setDeveloper(Developer developer) {
		this.developer = developer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "exception_id")
	public MyException getMyException() {
		return this.myException;
	}

	public void setMyException(MyException myException) {
		this.myException = myException;
	}

	@Column(name = "title")
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "content", length = 65535)
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "is_open")
	public Boolean getIsOpen() {
		return this.isOpen;
	}

	public void setIsOpen(Boolean isOpen) {
		this.isOpen = isOpen;
	}

	@Column(name = "votes")
	public Integer getVotes() {
		return this.votes;
	}

	public void setVotes(Integer votes) {
		this.votes = votes;
	}
	
	@Column(name = "sof_id")
	public Integer getSofId() {
		return sofId;
	}

	public void setSofId(Integer sofId) {
		this.sofId = sofId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "question")
	public Set<Answer> getAnswers() {
		return this.answers;
	}

	public void setAnswers(Set<Answer> answers) {
		this.answers = answers;
	}

}
