package com.sicd.bugmanagement.common.bean;

// Generated 2013-10-17 10:13:18 by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Type;

/**
 * ExceptionRecord generated by hbm2java
 */
@Entity
@Table(name = "exception_record", catalog = "bugmanagement")
public class ExceptionRecord implements java.io.Serializable {

	private static final long serialVersionUID = 5826219571397531596L;
	
	private Integer recordId;
	private Developer developer;
	private MyException myException;
	private String exceptionClass;
	private String detailMsg;
	private String stack;
	private String sourceInfo;
	private Integer lineNum;
	private String sourceCode;
	private Date createdAt;

	public ExceptionRecord() {
	}

	public ExceptionRecord(Developer developer, MyException exception,
			String detailMsg, String stack, Date createdAt) {
		this.developer = developer;
		this.myException = exception;
		this.detailMsg = detailMsg;
		this.stack = stack;
		this.createdAt = createdAt;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "record_id", unique = true, nullable = false)
	public Integer getRecordId() {
		return this.recordId;
	}

	public void setRecordId(Integer recordId) {
		this.recordId = recordId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "developer_id")
	public Developer getDeveloper() {
		return this.developer;
	}

	public void setDeveloper(Developer developer) {
		this.developer = developer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "exception_id")
	public MyException getMyException() {
		return this.myException;
	}

	public void setMyException(MyException myException) {
		this.myException = myException;
	}
	
	@Column(name = "exception_class")
	public String getExceptionClass() {
		return this.exceptionClass;
	}

	public void setExceptionClass(String exceptionClass) {
		this.exceptionClass = exceptionClass;
	}

	@Column(name = "detail_msg")
	@Type(type="text")
	public String getDetailMsg() {
		return this.detailMsg;
	}

	public void setDetailMsg(String detailMsg) {
		this.detailMsg = detailMsg;
	}

	@Column(name = "stack")
	@Type(type="text")
	public String getStack() {
		return this.stack;
	}

	public void setStack(String stack) {
		this.stack = stack;
	}
	
	@Column(name = "source_info")
	public String getSourceInfo() {
		return sourceInfo;
	}

	public void setSourceInfo(String sourceInfo) {
		this.sourceInfo = sourceInfo;
	}

	@Column(name = "line_num")
	public Integer getLineNum() {
		return lineNum;
	}

	public void setLineNum(Integer lineNum) {
		this.lineNum = lineNum;
	}

	@Column(name = "source_code")
	@Type(type="text")
	public String getSourceCode() {
		return sourceCode;
	}

	public void setSourceCode(String sourceCode) {
		this.sourceCode = sourceCode;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

}
