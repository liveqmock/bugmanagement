package com.sicd.bugmanagement.common.bean;

// Generated 2013-10-17 10:13:18 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Tester generated by hbm2java
 */
@Entity
@Table(name = "tester", catalog = "bugmanagement")
public class Tester implements java.io.Serializable {

	private static final long serialVersionUID = -1960780405592573448L;
	
	private int testerId;
	private User user;
	private Set<UserCase> userCasesForRunner = new HashSet<UserCase>(0);
	private Set<Task> tasksForOwner = new HashSet<Task>(0);
	private Set<Task> tasksForCreator = new HashSet<Task>(0);
	private Set<UserCase> userCasesForCreator = new HashSet<UserCase>(0);

	public Tester() {
	}

	public Tester(User user) {
		this.user = user;
	}

	public Tester(User user, Set<UserCase> userCasesForRunner,
			Set<Task> tasksForOwner, Set<Task> tasksForCreator,
			Set<UserCase> userCasesForCreator) {
		this.user = user;
		this.userCasesForRunner = userCasesForRunner;
		this.tasksForOwner = tasksForOwner;
		this.tasksForCreator = tasksForCreator;
		this.userCasesForCreator = userCasesForCreator;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "user"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "tester_id", unique = true, nullable = false)
	public int getTesterId() {
		return this.testerId;
	}

	public void setTesterId(int testerId) {
		this.testerId = testerId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "runner")
	public Set<UserCase> getUserCasesForRunner() {
		return this.userCasesForRunner;
	}

	public void setUserCasesForRunner(Set<UserCase> userCasesForRunner) {
		this.userCasesForRunner = userCasesForRunner;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "owner")
	public Set<Task> getTasksForOwner() {
		return this.tasksForOwner;
	}

	public void setTasksForOwner(Set<Task> tasksForOwner) {
		this.tasksForOwner = tasksForOwner;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "creator")
	public Set<Task> getTasksForCreator() {
		return this.tasksForCreator;
	}

	public void setTasksForCreator(Set<Task> tasksForCreator) {
		this.tasksForCreator = tasksForCreator;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "creator")
	public Set<UserCase> getUserCasesForCreator() {
		return this.userCasesForCreator;
	}

	public void setUserCasesForCreator(Set<UserCase> userCasesForCreator) {
		this.userCasesForCreator = userCasesForCreator;
	}

}
