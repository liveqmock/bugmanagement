package com.sicd.bugmanagement.common.bean;

// Generated 2013-10-17 10:13:18 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserCase generated by hbm2java
 */
@Entity
@Table(name = "user_case", catalog = "bugmanagement")
public class UserCase implements java.io.Serializable {

	private static final long serialVersionUID = 7960826327514860577L;

	private Integer caseId;
	private UserCase relatedCase;
	private Tester creator;
	private Bug toBug;
	private Tester runner;
	private Module module;
	private Bug fromBug;
	private String caseType;
	private String stage;
	private Integer priority;
	private String status;
	private String result;
	private String title;
	private String precondition;
	private String keyword;
	private Date createdAt;
	private Set<TestCase> testCases = new HashSet<TestCase>(0);
	private Set<Bug> bugsForToCase = new HashSet<Bug>(0);
	private Set<Bug> bugsForFromCase = new HashSet<Bug>(0);
	private Set<UserCase> userCases = new HashSet<UserCase>(0);
	private Set<Step> steps = new HashSet<Step>(0);

	public UserCase() {
	}

	public UserCase(UserCase userCase, Tester testerByCreator, Bug bugByToBug,
			Tester testerByRunner, Module module, Bug bugByFromBug,
			String caseType, String stage, Integer priority, String title,
			String precondition, String keyword, Date createdAt,
			Set<TestCase> testCases, Set<Bug> bugsForToCase,
			Set<Bug> bugsForFromCase, Set<UserCase> userCases, Set<Step> steps) {
		this.relatedCase = userCase;
		this.creator = testerByCreator;
		this.toBug = bugByToBug;
		this.runner = testerByRunner;
		this.module = module;
		this.fromBug = bugByFromBug;
		this.caseType = caseType;
		this.stage = stage;
		this.priority = priority;
		this.title = title;
		this.precondition = precondition;
		this.keyword = keyword;
		this.createdAt = createdAt;
		this.testCases = testCases;
		this.bugsForToCase = bugsForToCase;
		this.bugsForFromCase = bugsForFromCase;
		this.userCases = userCases;
		this.steps = steps;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "case_id", unique = true, nullable = false)
	public Integer getCaseId() {
		return this.caseId;
	}

	public void setCaseId(Integer caseId) {
		this.caseId = caseId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "related_case")
	public UserCase getRelatedCase() {
		return this.relatedCase;
	}

	public void setRelatedCase(UserCase relatedCase) {
		this.relatedCase = relatedCase;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "creator")
	public Tester getCreator() {
		return this.creator;
	}

	public void setCreator(Tester creator) {
		this.creator = creator;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "to_bug")
	public Bug getToBug() {
		return this.toBug;
	}

	public void setToBug(Bug toBug) {
		this.toBug = toBug;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "runner")
	public Tester getRunner() {
		return this.runner;
	}

	public void setRunner(Tester runner) {
		this.runner = runner;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "module_id")
	public Module getModule() {
		return this.module;
	}

	public void setModule(Module module) {
		this.module = module;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "from_bug")
	public Bug getFromBug() {
		return this.fromBug;
	}

	public void setFromBug(Bug fromBug) {
		this.fromBug = fromBug;
	}

	@Column(name = "case_type", length = 30)
	public String getCaseType() {
		return this.caseType;
	}

	public void setCaseType(String caseType) {
		this.caseType = caseType;
	}

	@Column(name = "stage", length = 30)
	public String getStage() {
		return this.stage;
	}

	public void setStage(String stage) {
		this.stage = stage;
	}

	@Column(name = "priority")
	public Integer getPriority() {
		return this.priority;
	}

	public void setPriority(Integer priority) {
		this.priority = priority;
	}

	@Column(name = "status")
	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "result")
	public String getResult() {
		return result;
	}

	public void setResult(String result) {
		this.result = result;
	}

	@Column(name = "title")
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "precondition", length = 65535)
	public String getPrecondition() {
		return this.precondition;
	}

	public void setPrecondition(String precondition) {
		this.precondition = precondition;
	}

	@Column(name = "keyword")
	public String getKeyword() {
		return this.keyword;
	}

	public void setKeyword(String keyword) {
		this.keyword = keyword;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userCase")
	public Set<TestCase> getTestCases() {
		return this.testCases;
	}

	public void setTestCases(Set<TestCase> testCases) {
		this.testCases = testCases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "toCase")
	public Set<Bug> getBugsForToCase() {
		return this.bugsForToCase;
	}

	public void setBugsForToCase(Set<Bug> bugsForToCase) {
		this.bugsForToCase = bugsForToCase;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fromCase")
	public Set<Bug> getBugsForFromCase() {
		return this.bugsForFromCase;
	}

	public void setBugsForFromCase(Set<Bug> bugsForFromCase) {
		this.bugsForFromCase = bugsForFromCase;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "relatedCase")
	public Set<UserCase> getUserCases() {
		return this.userCases;
	}

	public void setUserCases(Set<UserCase> userCases) {
		this.userCases = userCases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userCase")
	public Set<Step> getSteps() {
		return this.steps;
	}

	public void setSteps(Set<Step> steps) {
		this.steps = steps;
	}

	@Override
	public int hashCode() {
		int result = 31;
		result += caseId.hashCode();
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (!(obj instanceof UserCase))
			return false;
		else
			return this.caseId.equals(((UserCase) obj).getCaseId());
	}

}
