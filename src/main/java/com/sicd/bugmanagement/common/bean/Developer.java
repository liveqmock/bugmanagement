package com.sicd.bugmanagement.common.bean;

// Generated 2013-10-17 10:13:18 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Developer generated by hbm2java
 */
@Entity
@Table(name = "developer", catalog = "bugmanagement")
public class Developer implements java.io.Serializable {

	private static final long serialVersionUID = 6266695509231765258L;
	
	private int developerId;
	private User user;
	private Set<ExceptionRecord> exceptionRecords = new HashSet<ExceptionRecord>(
			0);
	private Set<Question> questions = new HashSet<Question>(0);
	private Set<Answer> answers = new HashSet<Answer>(0);
	private Set<Vote> votes = new HashSet<Vote>(0);
	private Set<Bug> bugs = new HashSet<Bug>(0);
	private Set<ExcludeException> excludeExceptions = new HashSet<ExcludeException>(
			0);

	public Developer() {
	}

	public Developer(User user) {
		this.user = user;
	}

	public Developer(User user, Set<ExceptionRecord> exceptionRecords,
			Set<Question> questions, Set<Answer> answers, Set<Vote> votes,
			Set<Bug> bugs, Set<ExcludeException> excludeExceptions) {
		this.user = user;
		this.exceptionRecords = exceptionRecords;
		this.questions = questions;
		this.answers = answers;
		this.votes = votes;
		this.bugs = bugs;
		this.excludeExceptions = excludeExceptions;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "user"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "developer_id", unique = true, nullable = false)
	public int getDeveloperId() {
		return this.developerId;
	}

	public void setDeveloperId(int developerId) {
		this.developerId = developerId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "developer")
	public Set<ExceptionRecord> getExceptionRecords() {
		return this.exceptionRecords;
	}

	public void setExceptionRecords(Set<ExceptionRecord> exceptionRecords) {
		this.exceptionRecords = exceptionRecords;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "developer")
	public Set<Question> getQuestions() {
		return this.questions;
	}

	public void setQuestions(Set<Question> questions) {
		this.questions = questions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "developer")
	public Set<Answer> getAnswers() {
		return this.answers;
	}

	public void setAnswers(Set<Answer> answers) {
		this.answers = answers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "developer")
	public Set<Vote> getVotes() {
		return this.votes;
	}

	public void setVotes(Set<Vote> votes) {
		this.votes = votes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "assignedTo")
	public Set<Bug> getBugs() {
		return this.bugs;
	}

	public void setBugs(Set<Bug> bugs) {
		this.bugs = bugs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "developer")
	public Set<ExcludeException> getExcludeExceptions() {
		return this.excludeExceptions;
	}

	public void setExcludeExceptions(Set<ExcludeException> excludeExceptions) {
		this.excludeExceptions = excludeExceptions;
	}

}
